library(ggplot2)
CSV_FILE <- "activity.csv"
ZIP_FILE <- "activity.zip"
if(!file.exists(CSV_FILE)) {
unzip(ZIP_FILE)
}
act_data <- read.csv(CSV_FILE)
act_data$date <- as.Date(act_data$date, "%Y-%m-%d")
act_data
aggregate(x = act_data$steps, by = list(date = act_data$date), FUN = "sum")
tot_steps_day <- aggregate(x = act_data$steps, by = list(date = act_data$date), FUN = "sum")
colnames(tot_steps_day) <- c("Date", "Steps")
head(tot_steps_day)
hist(tot_steps_day, Plot = TRUE)
qplot(x=tot_steps_day$Date, y = tot_steps_day$Steps, geom = "histogram")
qplot(x=tot_steps_day$Date, y = tot_steps_day$Steps)
qplot(x=tot_steps_day$Steps, geom = "histogram")
mean(x=tot_steps_day$Steps, na.rm=TRUE)
median(x=tot_steps_day$Steps, na.rm=TRUE)
mean(x=tot_steps_day$Steps, na.rm=TRUE)
median(x=tot_steps_day$Steps, na.rm=TRUE)
qplot(x=tot_steps_day$Steps, geom = "histogram", xlab="Total Nr of Steps")
qplot(x=tot_steps_day$Steps, geom = "histogram", xlab="Total no. of steps", ylab="Frequency")
head(act_data)
act_data[1,3]
act_data[,c(1,3)]
act_pattern <- act_data[,c(1,3)]
act_pattern
head(act_pattern)
act_pattern <- aggregate(x = act_data$steps, by = list(interval = act_data$interval), FUN = "sum")
act_pattern
act_pattern <- aggregate(x = act_data$steps, by = list(interval = act_data$interval), FUN = "sum", na.rm=TRUE)
act_pattern
ggplot(x = act_pattern$x, y = act_pattern$interval)
ggplot(x = act_pattern$x, y = act_pattern$interval, data = act_pattern)
plot(x = act_pattern$x, y = act_pattern$interval, data = act_pattern, type = "l")
plot(x = act_pattern$interval, y = act_pattern$x, data = act_pattern, type = "l")
ggplot2(x = act_pattern$interval, y = act_pattern$x, data = act_pattern, type = "l")
qplot(x = act_pattern$interval, y = act_pattern$x, data = act_pattern)
qplot(x = act_pattern$interval, y = act_pattern$x, data = act_pattern, geom="line")
act_pattern <- aggregate(x = act_data$steps, by = list(interval = act_data$interval), FUN = "mean", na.rm=TRUE)
qplot(x = act_pattern$interval, y = act_pattern$x, data = act_pattern, geom="line")
qplot(x = act_pattern$interval, y = act_pattern$x, data = act_pattern, geom="line")
act_pattern <- aggregate(x = act_data$steps, by = list(interval = act_data$interval), FUN = "mean", na.rm=TRUE)
max(act_pattern$x)
max.col(act_pattern$x)
max.col(act_pattern)
which.max(act_pattern$x)
act_pattern[104,]
act_pattern[104,]
act_pattern[which.max(act_pattern$x), 1]
dim(act_data)
dim(act_data)[2]
1:dim(act_data)[2]
for i in 1:dim(act_data)[2] {
print(i)
}
for(i in 1:dim(act_data)[2]) {
print(i)
}
which(act_data[,1] == is.na)
act_data
head(act_data)
which(is.na(act_data))
act_data[17567,]
dim(which(is.na(act_data)))
length(which(is.na(act_data)))
na_rows <- which(is.na(act_data))
for(i in na_rows) {print(i)}
is.na(act_data)
is.na(act_data$steps)
which(is.na(act_data$steps))
act_data
head(act_data)
act_data$interval == 1245
which(act_data$interval == 1245)
act_data[which(act_data$interval == 1245),]
act_data[which(act_data$interval == 1245),]$steps
mean(act_data[which(act_data$interval == 1245),]$steps, na.rm=TRUE)
ceiling(37.73)
gen_value <- ceil(mean(act_data[which(act_data$interval == 1245),]$steps, na.rm=TRUE)) + 1
gen_value <- ceiling(mean(act_data[which(act_data$interval == 1245),]$steps, na.rm=TRUE)) + 1
gen_value <- ceiling(mean(act_data[which(act_data$interval == 1245),]$steps, na.rm=TRUE)) + 1
gen_vaue
gen_value
act_data_modif[1,$steps]
act_data_modif[1,]$steps
act_data[1,]$steps
act_data[178,]$steps
act_data[17899,]$steps
act_data[10899,]$steps
act_data[1245,]$steps
5+10/2
(5+10)/2
agg_hist <- function(act_data) {
agg_data <- act_agg(act_data)
qplot(x=agg_data$steps, geom = "histogram", xlab="Total no. of steps", ylab="Frequency")
}
act_data
weekdays(act_data$date)
act_data$date
weekdays(act_data$date)
weekdays(act_data$date,abbreviate=TRUE)
weekdays.Date(act_data$date)
act_data[1,]$date
str(act_data[1,]$date)
julian(act_data[1,]$date)
as.POSIXct(act_data[1,]$date)
as.POSIXct(act_data[1,]$date)$wday
as.POSIXlt(act_data[1,]$date)$wday
weekdays(act_data[1,]$date)
as.POSIXlt(act_data$date)$wday
which(as.POSIXlt(act_data$date)$wday == 7)
as.POSIXlt(act_data$date)$wday == 7
as.POSIXlt(act_data$date)$wday == 0
as.POSIXlt(act_data$date)$wday %in% c(6,7)
which(as.POSIXlt(act_data$date)$wday %in% c(6,7))
factor(foo)
act_data_week <- act_data
act_data_week[type_of_day] <- "weekday"
act_data_week["type_of_day"] <- "weekday"
act_data_week
SATURDAY <- 6
SUNDAY <- 7
act_data_week <- act_data
weekends <- which(as.POSIXlt(act_data$date)$wday %in% c(SATURDAY,SUNDAY))
act_data_week["type_of_day"] <- "weekday"
act_data_week[weekends,]$type_of_day <- "weekend"
act_data_week$type_of_day <- factor(act_data_week$type_of_day)
head(act_data_week)
str(act_data_week$type_of_day)
as.Date("2014-07-08")
as.POSIXlt(as.Date("2014-07-08"))
as.POSIXlt(as.Date("2014-07-08"))$wday
as.POSIXlt(as.Date("2014-07-13"))$wday
as.POSIXlt(as.Date("2014-07-12"))$wday
library(ggplot2)
CSV_FILE <- "activity.csv"
ZIP_FILE <- "activity.zip"
if(!file.exists(CSV_FILE)) {
unzip(ZIP_FILE)
}
act_agg <- function(act_data) {
agg_data <- aggregate(x = act_data$steps, by = list(date = act_data$date), FUN = "sum")
colnames(tot_steps_day) <- c("date", "steps")
return(agg_data)
}
act_mean <- function(act_data) {
agg_data <- act_agg(act_data)
act_mean <- mean(x=agg_data$steps, na.rm=TRUE)
return(act_mean)
}
act_median <- function(act_data) {
agg_data <- act_agg(act_data)
median(x=agg_data$steps, na.rm=TRUE)
}
agg_hist <- function(act_data) {
agg_data <- act_agg(act_data)
qplot(x=agg_data$steps, geom = "histogram", xlab="Total no. of steps", ylab="Frequency")
}
act_data <- read.csv(CSV_FILE)
# Convert date column to R format
act_data$date <- as.Date(act_data$date, "%Y-%m-%d")
act_hist(act_data)
library(ggplot2)
CSV_FILE <- "activity.csv"
ZIP_FILE <- "activity.zip"
if(!file.exists(CSV_FILE)) {
unzip(ZIP_FILE)
}
act_agg <- function(act_data) {
agg_data <- aggregate(x = act_data$steps, by = list(date = act_data$date), FUN = "sum")
colnames(tot_steps_day) <- c("date", "steps")
return(agg_data)
}
act_mean <- function(act_data) {
agg_data <- act_agg(act_data)
act_mean <- mean(x=agg_data$steps, na.rm=TRUE)
return(act_mean)
}
act_median <- function(act_data) {
agg_data <- act_agg(act_data)
median(x=agg_data$steps, na.rm=TRUE)
}
act_hist <- function(act_data) {
agg_data <- act_agg(act_data)
qplot(x=agg_data$steps, geom = "histogram", xlab="Total no. of steps", ylab="Frequency")
}
act_hist(act_data)
agg_data <- act_agg(act_data)
qplot(x=agg_data$steps, geom = "histogram", xlab="Total no. of steps", ylab="Frequency")
_mean <- act_mean(act_data)
day_mean <- act_mean(act_data)
tot_steps_day <- aggregate(x = act_data$steps, by = list(date = act_data$date), FUN = "sum")
colnames(tot_steps_day) <- c("Date", "Steps")
qplot(x=tot_steps_day$Steps, geom = "histogram", xlab="Total no. of steps", ylab="Frequency")
act_agg <- function(act_data) {
agg_data <- aggregate(x = act_data$steps, by = list(date = act_data$date), FUN = "sum")
colnames(agg_data) <- c("date", "steps")
return(agg_data)
}
act_hist(act_data)
day_mean <- act_mean(act_data)
day_mean
day_median <- act_median(act_data)
day_media
day_median
# Remove the "date" columne, since it is not needed
act_pattern <- act_data[,c(1,3)]
act_pattern <- aggregate(x = act_data$steps, by = list(interval = act_data$interval), FUN = "mean", na.rm=TRUE)
print(qplot(x = act_pattern$interval, y = act_pattern$x, data = act_pattern, geom="line"))
print(qplot(x=act_pattern$interval, y=act_pattern$x, data=act_pattern, geom="line",
xlab="Steps Average", ylab="Interval"))
print(qplot(x=act_pattern$interval, y=act_pattern$x, data=act_pattern, geom="line",
ylab="Steps Average", xlab="Interval"))
max_ival <- act_pattern[which.max(act_pattern$x), 1]
max_ival
# iterate over all rows with missing values
act_data_modif <- act_data
for(row in which(is.na(act_data_modif$steps))){
# get average for interval, round it and add 1 to make sure it's > 0 (probability of zero is bad!)
gen_value <-
ceiling(
mean(
act_data[which(act_data$interval == act_data_modif[row,]$interval),]$steps, na.rm=TRUE)) + 1
act_data_modif[row,]$steps <- gen_value
}
act_hist(act_data_modif)
act_mean <- act_mean(act_data_modif)
day_mean <- act_mean(act_data_modif)
day_median <- act_median(act_data_modif)
day_median
day_mean
# Add weekday to data set
SATURDAY <- 6
SUNDAY <- 0
act_data_week <- act_data
weekends <- which(as.POSIXlt(act_data$date)$wday %in% c(SATURDAY,SUNDAY))
act_data_week["type_of_day"] <- "weekday"
act_data_week[weekends,]$type_of_day <- "weekend"
act_data_week$type_of_day <- factor(act_data_week$type_of_day)
act_data_modif
# iterate over all rows with missing values
act_data_modif <- act_data
for(row in which(is.na(act_data_modif$steps))){
# get average for interval, round it and add 1 to make sure it's > 0 (probability of zero is bad!)
gen_value <-
ceiling(
mean(
act_data[which(act_data$interval == act_data_modif[row,]$interval),]$steps, na.rm=TRUE)) + 1
print("inputing: ", gen_value)
act_data_modif[row,]$steps <- gen_value
}
# iterate over all rows with missing values
act_data_modif <- act_data
for(row in which(is.na(act_data_modif$steps))){
# get average for interval, round it and add 1 to make sure it's > 0 (probability of zero is bad!)
gen_value <-
ceiling(
mean(
act_data[which(act_data$interval == act_data_modif[row,]$interval),]$steps, na.rm=TRUE)) + 1
text <- c("inputing", gen_value)
print(text)
act_data_modif[row,]$steps <- gen_value
}
head(act_data_week)
act_data_week <- aggregate(x = act_data$steps, by = list(date = act_data$date), FUN = "sum")
head(act_data_week)
act_data_week <- aggregate(x = act_data$steps, by = list(date = act_data$date), FUN = "sum", na.rm=TRUE)
head(act_data_week)
SATURDAY <- 6
SUNDAY <- 0
act_data_week <- aggregate(x = act_data$steps, by = list(date = act_data$date), FUN = "sum", na.rm=TRUE)
weekends <- which(as.POSIXlt(act_data$date)$wday %in% c(SATURDAY,SUNDAY))
act_data_week["type_of_day"] <- "weekday"
act_data_week[weekends,]$type_of_day <- "weekend"
act_data_week$type_of_day <- factor(act_data_week$type_of_day)
act_data_week
act_data_week <- aggregate(x = act_data$steps, by = list(date = act_data$date), FUN = "sum", na.rm=TRUE)
head(act_data_week)
act_data_week <- aggregate(x = act_data$steps, by = list(date = act_data$date), FUN = "sum", na.rm=TRUE)
colnames(act_data_week) <- c("date", "steps")
head(act_data_week)
SATURDAY <- 6
SUNDAY <- 0
act_data_week <- aggregate(x = act_data$steps, by = list(date = act_data$date), FUN = "sum", na.rm=TRUE)
colnames(act_data_week) <- c("date", "steps")
weekends <- which(as.POSIXlt(act_data_week$date)$wday %in% c(SATURDAY,SUNDAY))
act_data_week["type_of_day"] <- "weekday"
act_data_week[weekends,]$type_of_day <- "weekend"
act_data_week$type_of_day <- factor(act_data_week$type_of_day)
head(act_data_week)
print(qplot(x=act_data_week$interval, y=act_data_week$x, data=act_data_week, geom="line",
ylab="Steps Average", xlab="Interval"))
p <- ggplot(data=act_data_week, aes(x=act_data_week$interval, y=act_data_week$steps))
print(p)
p <- ggplot(data=act_data_week, aes(x=act_data_week$interval, y=act_data_week$steps))
+ geom_point(shape=1)
#print(qplot(x=act_data_week$interval, y=act_data_week$x, data=act_data_week, geom="line",
#            ylab="Steps Average", xlab="Interval", ))
p <- ggplot(data=act_data_week, aes(x=act_data_week$interval, y=act_data_week$steps)) + geom_point(shape=1)
print(p)
library(ggplot2)
print(p)
p <- ggplot(data=act_data_week, aes(x=act_data_week$interval, y=act_data_week$steps)) + geom_point(shape=1)
p + facets(type_of_day ~ .)
#print(qplot(x=act_data_week$interval, y=act_data_week$x, data=act_data_week, geom="line",
#            ylab="Steps Average", xlab="Interval", ))
p <- ggplot(data=act_data_week, aes(x=act_data_week$interval, y=act_data_week$steps)) + geom_point(shape=1)
p + facet_grid(type_of_day ~ .)
#print(qplot(x=act_data_week$interval, y=act_data_week$x, data=act_data_week, geom="line",
#            ylab="Steps Average", xlab="Interval", ))
p <- ggplot(data=act_data_week, aes(x=interval, y=steps)) + geom_point(shape=1)
p + facet_grid(type_of_day ~ .)
source('~/.active-rstudio-document', echo=TRUE)
p <- ggplot(data=act_data_week, aes(x=interval, y=steps)) + geom_point(shape=1)
p <- p + facet_grid(type_of_day ~ .)
print(p)
head(act_data_week)
p <- ggplot(data=act_data_week, aes(x=date, y=steps)) + geom_point(shape=1)
p <- p + facet_grid(type_of_day ~ .)
print(p)
p <- ggplot(data=act_data_week, aes(x=date, y=steps)) + geom_line(shape=1)
p <- p + facet_grid(type_of_day ~ .)
print(p)
